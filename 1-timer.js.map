{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst inputEl    = document.querySelector(\"#datetime-picker\");\nconst startBtn   = document.querySelector(\"[data-start]\");\nconst daysEl     = document.querySelector(\"[data-days]\");\nconst hoursEl    = document.querySelector(\"[data-hours]\");\nconst minutesEl  = document.querySelector(\"[data-minutes]\");\nconst secondsEl  = document.querySelector(\"[data-seconds]\");\n\nlet userSelectedDate = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const picked = selectedDates[0];\n    if (picked <= Date.now()) {\n      iziToast.error({ title: \"Error\", message: \"Please choose a date in the future\" });\n      startBtn.disabled = true;\n    } else {\n      userSelectedDate = picked;\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(inputEl, options);\n\nconst addLeadingZero = value => String(value).padStart(2, \"0\");\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour   = minute * 60;\n  const day    = hour * 24;\n\n  const days    = Math.floor(ms / day);\n  const hours   = Math.floor((ms % day) / hour);\n  const minutes = Math.floor((ms % hour) / minute);\n  const seconds = Math.floor((ms % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nstartBtn.addEventListener(\"click\", () => {\n  startBtn.disabled = true;\n  inputEl.disabled  = true;\n\n  const intervalId = setInterval(() => {\n    const diff = userSelectedDate - Date.now();\n\n    if (diff <= 0) {\n      clearInterval(intervalId);\n      daysEl.textContent    = \"00\";\n      hoursEl.textContent   = \"00\";\n      minutesEl.textContent = \"00\";\n      secondsEl.textContent = \"00\";\n      inputEl.disabled      = false;\n      return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(diff);\n\n    daysEl.textContent    = addLeadingZero(days);\n    hoursEl.textContent   = addLeadingZero(hours);\n    minutesEl.textContent = addLeadingZero(minutes);\n    secondsEl.textContent = addLeadingZero(seconds);\n  }, 1000);\n});\n"],"names":["inputEl","startBtn","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","options","selectedDates","picked","iziToast","flatpickr","addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","intervalId","diff"],"mappings":"+IAMA,MAAMA,EAAa,SAAS,cAAc,kBAAkB,EACtDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAa,SAAS,cAAc,aAAa,EACjDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAa,SAAS,cAAc,gBAAgB,EACpDC,EAAa,SAAS,cAAc,gBAAgB,EAE1D,IAAIC,EAAmB,KAEvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAASD,EAAc,CAAC,EAC1BC,GAAU,KAAK,OACjBC,EAAS,MAAM,CAAE,MAAO,QAAS,QAAS,oCAAoC,CAAE,EAChFT,EAAS,SAAW,KAEpBK,EAAmBG,EACnBR,EAAS,SAAW,GAEvB,CACH,EAEAU,EAAUX,EAASO,CAAO,EAE1B,MAAMK,EAAiBC,GAAS,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,EAE7D,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAU,KAAK,MAAMD,EAAK,KAAG,EAC7BE,EAAU,KAAK,MAAOF,EAAK,MAAO,IAAI,EACtCG,EAAU,KAAK,MAAOH,EAAK,KAAQ,GAAM,EACzCI,EAAU,KAAK,MAAOJ,EAAK,IAAU,GAAM,EAEjD,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEAlB,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBD,EAAQ,SAAY,GAEpB,MAAMoB,EAAa,YAAY,IAAM,CACnC,MAAMC,EAAOf,EAAmB,KAAK,IAAG,EAExC,GAAIe,GAAQ,EAAG,CACb,cAAcD,CAAU,EACxBlB,EAAO,YAAiB,KACxBC,EAAQ,YAAgB,KACxBC,EAAU,YAAc,KACxBC,EAAU,YAAc,KACxBL,EAAQ,SAAgB,GACxB,MACD,CAED,KAAM,CAAE,KAAAgB,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUO,CAAI,EAExDnB,EAAO,YAAiBU,EAAeI,CAAI,EAC3Cb,EAAQ,YAAgBS,EAAeK,CAAK,EAC5Cb,EAAU,YAAcQ,EAAeM,CAAO,EAC9Cb,EAAU,YAAcO,EAAeO,CAAO,CAC/C,EAAE,GAAI,CACT,CAAC"}